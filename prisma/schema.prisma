generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ==========================================
// User Model
// ==========================================
model User {
  id    Int    @id @default(autoincrement())
  email String @unique
  name  String

  external_token String?
  external_id    String
  manager_id     String?

  user_type UserType @default(employee)
  roles     Role[]

  is_active Boolean @default(true)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relation to departments
  departments UserDepartment[]

  @@index([is_active, email, external_id])
}

enum UserType {
  employee
  manager
  intern
  managment
}

enum Role {
  user
  admin
  manager
  employee
  sales_manager
  super_admin
}

// ==========================================
// Department Model
// ==========================================

model Department {
  id          Int            @id @default(autoincrement())
  name        String
  slug        DepartmentSlug @unique @default(other)
  description String?
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt

  // Relation to users
  users UserDepartment[]

  @@map("departments") // Explicit table name
}

enum DepartmentSlug {
  sales
  marketing
  finance
  hr
  operations
  legal
  customer_support
  other
}

// Ticket Model
// ==========================================

model Ticket {
  id Int @id @default(autoincrement())
}

// Join table for User-Department many-to-many relation
model UserDepartment {
  id           Int        @id @default(autoincrement())
  userId       Int
  departmentId Int
  user         User       @relation(fields: [userId], references: [id])
  department   Department @relation(fields: [departmentId], references: [id])
  joinedAt     DateTime   @default(now())

  @@unique([userId, departmentId])
  @@index([userId])
  @@index([departmentId])
}
